name: Build and Deploy Catalog

on:
  push:
    branches:
      - main
    paths:
      - "assets/**"
      - "scripts/**"
      - "_config.yml"
      - "index.html"
      - "_layouts/**"
  schedule:
    # Run daily at 2 AM UTC to ensure catalog stays fresh
    - cron: "0 2 * * *"
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libmagic1 \
            imagemagick \
            ffmpeg \
            python3-magic

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Validate all assets
        run: |
          echo "Validating all assets before building catalog..."
          python scripts/validate-assets.py --path assets --recursive

      - name: Generate checksums
        run: |
          echo "Generating checksums for all assets..."
          python scripts/generate-checksums.py --path assets --recursive --update-metadata

      - name: Build asset catalog
        run: |
          echo "Building asset catalog..."
          python scripts/build-catalog.py

          # Display catalog statistics
          echo "Catalog statistics:"
          jq '.stats' catalog/assets.json

      - name: Setup Ruby for Jekyll
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.1"
          bundler-cache: true

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Build with Jekyll
        run: |
          # Create Gemfile if it doesn't exist
          if [ ! -f Gemfile ]; then
            cat > Gemfile << EOF
          source "https://rubygems.org"
          gem "github-pages", group: :jekyll_plugins
          gem "jekyll-feed", "~> 0.12"
          gem "jekyll-seo-tag", "~> 2.6"
          gem "jekyll-sitemap", "~> 1.4"
          EOF
          fi

          bundle install
          bundle exec jekyll build --baseurl "/asset-library"
        env:
          JEKYLL_ENV: production

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./_site

      - name: Create catalog summary
        run: |
          # Create a summary for the PR or commit
          echo "## ðŸ“Š Catalog Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Extract statistics from catalog
          total_assets=$(jq -r '.total_assets' catalog/assets.json)
          total_size=$(jq -r '.total_size_human' catalog/assets.json)

          echo "- **Total Assets:** $total_assets" >> $GITHUB_STEP_SUMMARY
          echo "- **Total Size:** $total_size" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Asset types breakdown
          echo "### Asset Types" >> $GITHUB_STEP_SUMMARY
          echo "| Type | Count |" >> $GITHUB_STEP_SUMMARY
          echo "|------|-------|" >> $GITHUB_STEP_SUMMARY

          for type in images videos audio datasets archives; do
            if [ -f "catalog/${type}.json" ]; then
              count=$(jq -r '.total_assets' "catalog/${type}.json")
              echo "| ${type^} | $count |" >> $GITHUB_STEP_SUMMARY
            fi
          done

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
